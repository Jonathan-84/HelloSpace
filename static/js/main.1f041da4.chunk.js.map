{"version":3,"sources":["Components/Navbar.js","Components/Footer.js","Assets/Images/video.png","Pages/home.js","Components/MusicPanel.js","Pages/Earth.js","Components/Mars/marsweather.js","Components/Earth/earthweather.js","Pages/Mars.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Footer","href","target","APIurl","process","Home","props","state","image","title","explanation","type","fetch","then","response","json","setState","url","media","media_type","showMedia","this","alt","src","video","height","width","console","log","Component","Music","value","handleChange","bind","event","onChange","frameBorder","allowtransparency","allow","Earth","MarsWeather","date","min","max","overall","wind","pressure","terrestrial_date","min_temp","max_temp","atmo_opacity","wind_speed","marsWinds","earthLow","minEarth","efarMin","toFixed","earthHi","maxEarth","efarMax","earthPress","earthPressure","eWind","earthWind","earthMain","condition","eIcon","icon","iconUrl","stDate","fixedDate","moment","format","cTempMin","farMin","cTempMax","farMax","EarthWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","owUrl","main","temp_min","temp_max","weather","speed","Mars","marspic","latest_photos","img_src","require","config","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAkCiBA,MA7BjB,WAEI,OACE,mCACU,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,mBAAf,UACF,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,4BAEN,sBAAKA,UAAU,YAAf,UACA,6BACA,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,oBAGA,6BACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,WAA5B,qBAEA,6BACA,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,WAA3B,iCCADE,MAnBf,WACI,OACE,mCAEN,qBAAKF,UAAU,SAAf,SACI,sBAAKA,UAAU,mBAAf,UAEJ,6BACI,cAAC,IAAD,CAAMA,UAAU,cAAcG,KAAK,iCAAiCC,OAAO,SAA3E,sBAEH,6BACG,cAAC,IAAD,CAAMJ,UAAU,cAAcG,KAAK,mDAAmDC,OAAO,SAA7F,gC,4BChBW,MAA0B,kCCUnCC,EAAM,sDANOC,4CA6EJC,E,kDApEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,KAAM,IANO,E,qDAanB,WAAqB,IAAD,OAChBC,MAAMT,GACDU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKE,SAAS,CACVR,MAAMM,EAASG,IACfR,MAAMK,EAASL,MACfC,YAAYI,EAASJ,YACrBQ,MAAOJ,EAASK,kB,oBAQhC,WAEE,IAAIC,EAEFA,EADqB,UAAnBC,KAAKd,MAAMW,MAEX,iCACE,gGACA,mBAAGjB,KAAMoB,KAAKd,MAAMC,MAApB,SACF,qBAAMc,IAAI,mBAAmBC,IAAKC,EAAQC,OAAO,MAAMC,MAAM,aAO7D,mBAAGzB,KAAMoB,KAAKd,MAAMC,MAApB,SACA,qBAAMc,IAAI,mBAAmBC,IAAKF,KAAKd,MAAMC,MAAQiB,OAAO,MAAMC,MAAM,UAI5E,MAAqCL,KAAKd,MAAlCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,YAEpB,OADFiB,QAAQC,IAAIpB,EAAOC,EAAOC,GAEtB,qCACA,gCACA,yCACA,4DACCU,EAEC,4BAAIC,KAAKd,MAAME,QACf,mBAAGX,UAAU,WAAb,SAAyBuB,KAAKd,MAAMG,iBAEpC,uBAEA,8B,GAhEOmB,a,QCmDJC,E,kDAtDb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACwB,MAAO,0EAIrB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,gDAanB,SAAaC,GACXb,KAAKL,SAAS,CAACe,MAAOG,EAAMhC,OAAO6B,U,oBAKrC,WAEE,OACE,qCACA,uBACA,uBAAMjC,UAAU,iFAAhB,UACE,uBAAOA,UAAW,cAAlB,4BACE,yBAAQiC,MAAOV,KAAKd,MAAMwB,MAAOI,SAAUd,KAAKW,aAAclC,UAAU,cAAxE,UACA,wBAAQiC,MAAM,yEAAd,6BACE,wBAAQA,MAAM,gEAAd,uBACA,wBAAQA,MAAM,iEAAd,mCACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,MAAd,sBACA,wBAAQA,MAAM,MAAd,4BAIN,uBACA,qBAAKjC,UAAU,gBAAf,SACL,wBAAQyB,IAAKF,KAAKd,MAAMwB,MACpBL,MAAM,OAAOD,OAAO,MACpBW,YAAY,IAAI3B,MAAM,UAAS4B,kBAAkB,OAAOC,MAAM,kBAFlE,+BAIC,uBAEA,uBACA,8B,GAhDkBT,aCsCHU,E,kDAvCf,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAYnB,WAAqB,IAAD,OAGhBK,MAlBO,wDAmBFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKE,SAAS,S,oBAS1B,WACE,OACE,qCACA,oBAAIlB,UAAU,qDAAd,kBACA,mBAAGA,UAAU,kCAAb,iC,GAhCc+B,a,yBCiKHW,E,kDA5JT,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXkC,KAAK,GACLC,IAAI,GACJC,IAAI,GACJC,QAAQ,GACRC,KAAK,GACLC,SAAS,IARI,E,qDAkBnB,WAAqB,IAAD,OAGhBlC,MAxBG,qCAyBEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKE,SAAS,CACZyB,KAAK3B,EAASiC,iBACdL,IAAI5B,EAASkC,SACbL,IAAI7B,EAASmC,SACbL,QAAS9B,EAASoC,aAClBL,KAAM/B,EAASqC,WACfL,SAAUhC,EAASgC,gB,oBASjC,WAEE,IA+BAM,EA/BMC,EAAUhC,KAAKf,MAAMgD,SAIrBC,GADoB,EAAXF,EAAc,EAAG,IACVG,QAAQ,GAGvBC,EAASpC,KAAKf,MAAMoD,SAGpBC,GADkB,EAAVF,EAAa,EAAG,IACTD,QAAQ,GAGxBI,EAAYvC,KAAKf,MAAMuD,cAGtBC,EAAOzC,KAAKf,MAAMyD,UAGnBC,EAAW3C,KAAKf,MAAM2D,UAGtBC,EAAO7C,KAAKf,MAAM6D,KAClBC,EAAQ,oCAAD,OAAsCF,EAAtC,WAKjB,EAAiD7C,KAAKd,MAA/CkC,EAAP,EAAOA,KAAKE,EAAZ,EAAYA,IAAKD,EAAjB,EAAiBA,IAAKE,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,SAErCnB,QAAQC,IAAKiB,GAIXO,EADQ,OAATP,EAEC,mBAAI/C,UAAU,uDAAd,qBAKE,qBAAIA,UAAU,sCAAd,UAAqD+C,EAArD,OAOJ,IAAMwB,EAAS5B,EACT6B,EAAWC,IAAOF,GAAQG,OAAO,gBAEvC7C,QAAQC,IAAK0C,GAOb,IAAMG,EAAU/B,EAEXgC,GADsB,EAAXD,EAAc,EAAG,IACZjB,QAAQ,GAEtBmB,EAAUhC,EAGdiC,GAFwB,EAAXD,EAAa,EAAG,IAEbnB,QAAQ,GAE7B,OACE,qCACA,oBAAI1D,UAAU,QAAd,0BACA,mBAAGA,UAAU,WAAb,0FACA,qBAAKA,UAAU,gBAAf,SACA,wBAAOA,UAAU,iCAAjB,UACN,+BACE,oBAAIA,UAAU,+BAAd,sBACA,oBAAIA,UAAU,iDAAd,kBACA,oBAAIA,UAAU,iDAAd,kCAEF,+BACE,oBAAIA,UAAU,mBAAd,sBACA,qBAAIA,UAAU,sCAAd,UAAqD2E,EAArD,QAAoEC,EAApE,QACA,qBAAI5E,UAAU,sCAAd,eAAuDuD,EAAvD,OAAqEE,EAArE,WAEF,+BACE,oBAAIzD,UAAU,mBAAd,uBACA,qBAAIA,UAAU,sCAAd,UAAqD6E,EAArD,QAAoEC,EAApE,QACA,qBAAI9E,UAAU,sCAAd,UAAqD2D,EAArD,OAAkEE,EAAlE,WAEF,+BACE,oBAAI7D,UAAU,mBAAd,kCACA,oBAAIA,UAAU,sCAAd,SAAqDgD,IACrD,oBAAIhD,UAAU,sCAAd,SAAsD8D,OAExD,+BACE,oBAAI9D,UAAU,mBAAd,kBACCsD,EACD,qBAAItD,UAAU,sCAAd,UAAqDgE,EAArD,UAEF,+BACE,oBAAIhE,UAAU,mBAAd,+BACA,qBAAIA,UAAU,qCAAd,UAAoD8C,EAApD,OACA,qBAAI9C,UAAU,sCAAd,UAAqDkE,EAAU,+BAAM,qBAAKzC,IAAK6C,EAAS9C,IAAI,uBAA5F,eAKM,iFAAoDgD,KAC5D,uBAEA,uBAEA,8B,GAxJ8BzC,aC2EbgD,E,kDAhER,WAAYvE,GAAQ,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAErB+C,SAAS,GACTI,SAAU,GACVO,UAAW,GACXF,UAAW,GACXI,KAAK,GACLrB,SAAS,IATe,E,qDAqBpB,WAAqB,IAAD,OAClBgC,UAAUC,YAAYC,oBAAmB,SAACC,GACzC,IAAMC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAKjCC,EAAM,uDAAD,OAAyDL,EAAzD,gBAAoEG,EAApE,kBADOjF,mCACP,iBACXuB,QAAQC,IAAI2D,GACA3E,MAAM2E,GACD1E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKE,SAAS,CAEjBsC,SAASxC,EAAS0E,KAAKC,SACvB/B,SAAU5C,EAAS0E,KAAKE,SACxB7B,cAAe/C,EAAS0E,KAAK1C,SAC7BmB,UAAWnD,EAAS6E,QAAQ,GAAGH,KAC/BrB,KAAMrD,EAAS6E,QAAQ,GAAGxB,KAC1BJ,UAAUjD,EAAS+B,KAAK+C,gB,oBAUjC,WACA,MAA6DvE,KAAKd,MAA3D+C,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,SAAUO,EAA3B,EAA2BA,UAAWF,EAAtC,EAAsCA,UAAWjB,EAAjD,EAAiDA,SAGrD,OAFKnB,QAAQC,IAAI0B,EAAUI,EAAUO,EAAUF,EAAWjB,GAItD,cAAC,EAAD,eAAiBzB,KAAKd,Y,GA5DCsB,aCHzB1B,EAAM,4FAPOC,4CAyDJyF,E,kDA/CX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXuF,QAAS,IAHI,E,qDAYnB,WAAqB,IAAD,OAChBlF,MAAMT,GACDU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,EAAKE,SAAS,CACZ8E,QAAQhF,EAASiF,cAAc,GAAGC,e,oBAOhD,WAED,IAAOF,EAAWzE,KAAKd,MAAhBuF,QAEF,OADFnE,QAAQC,IAAIkE,GAER,qCACA,gCACA,sCACA,mBAAG7F,KAAMoB,KAAKd,MAAMC,MAApB,SACA,qBAAMc,IAAI,yBAAyBC,IAAKF,KAAKd,MAAMuF,QAAUrE,OAAO,MAAMC,MAAM,UAEhF,yEAGE,uBAEA,uBACA,cAAC,EAAD,W,GA1COG,aCLnBoE,EAAQ,IAAUC,SAiCHC,MA/Bf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUhG,cAAlB,SACI,qCACE,cAAC,EAAD,IACA,sBAAKN,UAAU,iBAAf,UACA,qBAAKA,UAAU,YAAf,SACA,cAAC,EAAD,MAEA,qBAAKA,UAAU,OAAf,SACA,eAAC,IAAD,WACD,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,IAAIC,UAAWlG,IACjC,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,SAASC,UAAWhE,IACtC,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,QAAQC,UAAWV,YAQpC,qBAAK/F,UAAU,cAAf,SACA,cAAC,EAAD,YCtBK0G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7F,MAAK,YAAkD,IAA/C8F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f041da4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\n\r\n\r\nfunction Navbar(){\r\n\r\n    return (\r\n      <>\r\n                <div className='nav-container'>\r\n                  <div className=\"header-image\">\r\n                    <div className='header-container'>\r\n                  <h2>\r\n                      <Link to=\"/\" className=\"nav-text\"> Hello Space</Link>\r\n                      </h2>\r\n                <div className='nav-links'>\r\n                <ul >\r\n                <Link to=\"/\" className=\"nav-text\">Temp</Link>\r\n                        </ul>\r\n                \r\n                <ul>\r\n                <Link to=\"/earth\" className=\"nav-text\">Earth</Link>\r\n                </ul>\r\n                <ul>\r\n                <Link to=\"/mars\" className=\"nav-text\">Mars</Link>\r\n                </ul>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Navbar;\r\n  ","import React from 'react';\r\n//import Navbar from 'react-bootstrap/Navbar'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Will add in the future\r\nfunction Footer() {\r\n    return (\r\n      <>\r\n\r\n<div className='footer'>\r\n    <div className=\"footer-container\" >  \r\n\r\n<ul>\r\n    <Link className='footer-text' href=\"https://github.com/Jonathan-84\" target=\"_blank\">GitHub</Link>\r\n </ul>\r\n <ul>\r\n    <Link className='footer-text' href=\"https://www.linkedin.com/company/exley-deadlines\" target=\"_blank\">LinkedIn</Link>\r\n    </ul>\r\n</div>\r\n</div>\r\n</>    \r\n    )\r\n    \r\n}\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/video.c150e9f1.png\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport video from '../Assets/Images/video.png';\r\n\r\n    const api_key= process.env.REACT_APP_GOVT_API_KEY;\r\n    \r\n\r\n\r\n//full link https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY\r\n\r\nconst APIurl = `https://api.nasa.gov/planetary/apod?api_key=${api_key}`;\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          image: [],\r\n          title: [],\r\n          explanation: [],\r\n          type: []\r\n         \r\n\r\n        };\r\n    }\r\n  \r\n\r\n    componentDidMount() {\r\n        fetch(APIurl)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                    image:response.url,\r\n                    title:response.title,\r\n                    explanation:response.explanation,\r\n                    media: response.media_type\r\n\r\n                  \r\n                })\r\n            })\r\n            \r\n    }\r\n  \r\n    render() {\r\n \r\n      let showMedia;\r\n      if (this.state.media===\"video\") {\r\n        showMedia = (\r\n          <span>\r\n            <p>It's a video of the day! Click the icon to be redirected to it!</p>\r\n            <a href={this.state.image}>\r\n          <img  alt='random astronomy' src={video}  height=\"200\" width=\"200\"/>\r\n          </a>\r\n          \r\n          </span>\r\n        )\r\n      } else {\r\n        showMedia = (\r\n          <a href={this.state.image}>\r\n          <img  alt='random astronomy' src={this.state.image}  height=\"300\" width=\"500\"/>\r\n          </a>\r\n        )\r\n      }\r\n      const { image, title, explanation} = this.state;\r\n      console.log(image, title, explanation)\r\n        return (\r\n          <>\r\n          <div>\r\n          <h1>Welcome</h1>\r\n          <h3>Astronomy Photo of the Day</h3>\r\n          {showMedia}\r\n      \r\n            <p>{this.state.title}</p>\r\n            <p className='explText'>{this.state.explanation}</p>\r\n            </div>\r\n            <br>\r\n            </br>\r\n            <br></br>\r\n</>\r\n       )\r\n   }\r\n        }\r\nexport default Home;\r\n\r\n//clean up afterwards, this was the original JSON pull\r\n/*\r\nThe fetch itself works, and extracted JSON, fiddling with the format to better map the information and \r\nuse it below. Not to mention, this would better allow me to use \r\n\r\nconst baseUrl= 'https://api.nasa.gov/planetary/apod';\r\n  const api_key= process.env.REACT_APP_GOVT_API_KEY;\r\n\r\n\r\n  fetch(`${baseUrl}?api_key=${api_key}`)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n  console.log (response.hdurl, response.explanation);\r\n\r\n     I believe the above link was the right one, need to find how to return the \r\n      link-- ran into request issues, too many while testing state\r\n       console.log(response.originator.name)\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n    \r\n    return (\r\n      <>\r\n      <h1>Home</h1>\r\n      <p> NASA is the bees knees.\r\n        </p>\r\n        <div className=\"pic-day\">\r\n          <p>Picture Goes Here</p>\r\n      \r\n        </div>\r\n\r\n\r\n      </>\r\n    );\r\n    }\r\n  export default Home;\r\n*/\r\n","import React, {Component} from 'react';\r\n\r\n\r\n// Look into the ability to integrate the playe, rather than just the iframe. Iframe only gives sample of song,\r\n//want the ability to play on-going, that's the purpose of keeping it the sameo on left panel\r\n\r\nclass Music extends Component {\r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 'https://open.spotify.com/embed/playlist/792i0xmXcx6A9R3dYr3koO?theme=0'\r\n  };\r\n\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n\r\n  }\r\n\r\n \r\n  \r\n  handleChange(event) {\r\n    this.setState({value: event.target.value\r\n    });\r\n  \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n      <br></br>\r\n      <form className='row justify-content-around d-flex flex-column flex-lg-row align-content-center'>\r\n        <label className= 'music-color'>  Space Radio </label>\r\n          <select value={this.state.value} onChange={this.handleChange} className=\"music-color\">\r\n          <option value=\"https://open.spotify.com/embed/playlist/792i0xmXcx6A9R3dYr3koO?theme=0\">Listen In Space</option>\r\n            <option value=\"https://open.spotify.com/embed/episode/2RHNMVBEJ91SMisVu6NoPD\">Star Talk</option>\r\n            <option value=\"https://open.spotify.com/embed/playlist/6pcuzwZSIw7OgL149bgJmZ\">Voyager Golden Record</option>\r\n            <option value=\"90\">3 Months</option>\r\n            <option value=\"180\">6 Months</option>\r\n            <option value=\"270\">9 Months</option>\r\n          </select>\r\n     \r\n      </form>\r\n      <br></br>\r\n      <div className=\" center-music\">\r\n <iframe src={this.state.value}\r\n     width=\"100%\" height=\"400\" \r\n     frameBorder=\"0\" title='Spotify'allowtransparency=\"true\" allow=\"encrypted-media\">Listen In Space</iframe>\r\n        </div>\r\n  <br>\r\n  </br>\r\n  <br></br>\r\n  <br></br>\r\n  \r\n\r\n            \r\n      </>\r\n    );\r\n}\r\n}\r\n\r\nexport default Music;\r\n    \r\n\r\n\r\n/*import React from 'react';\r\n\r\n\r\n\r\nconst Music = () => {\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n     \r\n     <iframe src=\"https://open.spotify.com/embed/playlist/792i0xmXcx6A9R3dYr3koO?theme=0\" \r\n     width=\"100%\" height=\"500\" \r\n     frameBorder=\"0\" title='Spotify'allowtransparency=\"true\" allow=\"encrypted-media\">Listen In Space</iframe>\r\n\r\n      </>\r\n    );\r\n  }; \r\n  export default Music;\r\n\r\n*/","import React, {Component} from 'react';\r\n\r\nconst wevt = 'https://eonet.sci.gsfc.nasa.gov/api/v3/events?days=5'\r\n\r\nclass Earth extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n      //  marsweather: [],\r\n     \r\n      \r\n       \r\n\r\n      };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n\r\n      fetch(wevt)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              this.setState({\r\n              //  marspic:response.latest_photos[0].img_src\r\n               \r\n          \r\n              })\r\n          })\r\n          \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <h1 className=\"display-4 text-center border-bottom border-warning\">Home</h1>\r\n      <p className=\"text-md-center text-sm-left m-3\"> I am Earth.\r\n        </p>\r\n\r\n\r\n      </>\r\n    );\r\n  }; \r\n}\r\n  export default Earth;\r\n\r\n","import React, {Component} from 'react';\r\n//import Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst APIurl = 'https://api.maas2.apollorion.com/';\r\n\r\n    class MarsWeather extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n              date:[],\r\n              min:[],\r\n              max:[], \r\n              overall:[], \r\n              wind:[], \r\n              pressure:[]\r\n            //  marsweather: [],\r\n           \r\n            \r\n             \r\n    \r\n            };\r\n        }\r\n      \r\n    \r\n        componentDidMount() {\r\n    \r\n\r\n            fetch(APIurl)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    this.setState({\r\n                      date:response.terrestrial_date,\r\n                      min:response.min_temp,\r\n                      max:response.max_temp,\r\n                      overall: response.atmo_opacity,\r\n                      wind: response.wind_speed,\r\n                      pressure: response.pressure\r\n                    //  marspic:response.latest_photos[0].img_src\r\n                     \r\n                \r\n                    })\r\n                })\r\n                \r\n        }\r\n      \r\n        render() {\r\n          // Brings in the earth minimum temp child\r\n          const earthLow= this.props.minEarth;\r\n          \r\n          // Converts to Fahrenheit\r\n          const eLowFar= earthLow * 9 /5 +32;\r\n          const efarMin=eLowFar.toFixed(2)\r\n\r\n           // Brings in the earth minimum temp child\r\n           const earthHi= this.props.maxEarth;\r\n\r\n           const eHiFar= earthHi * 9 /5 +32;\r\n           const efarMax=eHiFar.toFixed(2)\r\n\r\n            // Brings in the earth press temp child\r\n          const earthPress= this.props.earthPressure;\r\n\r\n           // Brings in the earth wind to child\r\n           const eWind= this.props.earthWind;\r\n\r\n            // Brings in the earth press temp child\r\n          const earthMain= this.props.condition;\r\n\r\n          // Brings in the earth icon and set it for rendering\r\n          const eIcon= this.props.icon;\r\n          const iconUrl= `http://openweathermap.org/img/wn/${eIcon}@2x.png`\r\n          \r\n          \r\n          \r\n\r\n      const {date,max, min, overall, wind, pressure} = this.state;\r\n\r\n      console.log (wind)\r\n      let marsWinds;\r\n      if \r\n      (wind === null) {\r\n        marsWinds = (\r\n        <p  className='table-horizontal table-column-left table-header-text'>No data</p>\r\n        )\r\n      }\r\n      else{\r\n        marsWinds=(\r\n          <td className=\" table-horizontal table-column-left\">{wind} </td>\r\n       )\r\n      }\r\n\r\n\r\n      \r\n      \r\n      const stDate = date;\r\n      const fixedDate= moment(stDate).format('MMMM Do YYYY')\r\n      //new Date(stDate)\r\n      console.log (fixedDate)\r\n    \r\n      \r\n////////////////////////////////////\r\n\r\n//MARS\r\n      // converted Celsius to Fahre for Min\r\n      const cTempMin= min;\r\n      const toFarMin= cTempMin * 9 /5 +32;\r\n     const farMin=toFarMin.toFixed(2)\r\n// converted Celsius to Fahr for Max (data comes in as Celsius)\r\n      const  cTempMax= max;\r\n      const toFarMax= cTempMax * 9/5 +32;\r\n    \r\n   const farMax=toFarMax.toFixed(2)\r\n////////////////////////////////////////\r\n    return (\r\n      <>\r\n      <h1 className=\"title\">Mars Weather</h1>\r\n      <p className='subtitle'> Data was from Mars Curiosity Rover (Rover Environmental Monitoring Station)</p>\r\n      <div className='w3-responsive'>\r\n      <table className=\"w3-table-all table-header-text\">\r\n<tr >\r\n  <th className=\" w3-center table-header-text\">Category</th>\r\n  <th className=\" w3-center table-column-left table-header-text\">Mars</th>\r\n  <th className=\" w3-center table-column-left table-header-text\">Earth (Your City)</th>\r\n</tr>\r\n<tr>\r\n  <td className=\"table-horizontal\">Temp Low</td>\r\n  <td className=\" table-horizontal table-column-left\">{cTempMin} C / {farMin} F</td>\r\n  <td className=\" table-horizontal table-column-left\">  {earthLow} C/ {efarMin} F</td>\r\n</tr>\r\n<tr>\r\n  <td className=\"table-horizontal\">Temp High</td>\r\n  <td className=\" table-horizontal table-column-left\">{cTempMax} C / {farMax} F</td>\r\n  <td className=\" table-horizontal table-column-left\">{earthHi} C/ {efarMax} F</td>\r\n</tr>\r\n<tr>\r\n  <td className=\"table-horizontal\">Atmospheric Pressure</td>\r\n  <td className=\"table-horizontal  table-column-left\">{pressure}</td>\r\n  <td className=\" table-horizontal table-column-left\">{ earthPress}</td>\r\n</tr>\r\n<tr>\r\n  <td className=\"table-horizontal\">Wind</td>\r\n  {marsWinds}\r\n  <td className=\" table-horizontal table-column-left\">{eWind} </td>\r\n</tr>\r\n<tr >\r\n  <td className=\"table-horizontal\">Overall Condition</td>\r\n  <td className=\"table-horizontal table-column-left\">{overall} </td>\r\n  <td className=\" table-horizontal table-column-left\">{earthMain}<span><img src={iconUrl} alt=\"icon for weather\"></img></span> </td>\r\n</tr>\r\n</table>\r\n</div>\r\n\r\n        <p>Date that Mar's weather data was last received: {fixedDate}</p>\r\n<br>\r\n</br>\r\n<br>\r\n</br>\r\n<br></br>\r\n      </>\r\n    );\r\n  }; \r\n}\r\n  export default MarsWeather;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport MarsWeather from \"../Mars/marsweather\";\r\n\r\n \r\n\r\n\r\n \r\n//take the value from this then prop this ito marsweather to dispkay in table\r\n/*\r\n*/\r\n// address formula --- need to use current weather\r\n//\"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&units=imperial&appid=184b90f195e0b6670ef9fee34b9291e1\"\r\n\r\n\r\n\r\n    class EarthWeather extends Component {\r\n  \r\n\r\n         constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n    \r\n    minEarth:[],\r\n    maxEarth: [],\r\n    condition: [],\r\n    earthWind: [],\r\n    icon:[],\r\n    pressure:[]\r\n            //  marsweather: [],\r\n           \r\n            \r\n             \r\n    \r\n            };\r\n        }\r\n        \r\n        \r\n    \r\n        // need to get the query to show up in the URL fetch\r\n        componentDidMount() {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n           const lat = position.coords.latitude;\r\n           const long= position.coords.longitude;\r\n         \r\n\r\n          /// api.openweathermap.org/data/2.5/weather?lat={position.coords.latitude}&lon={position.coords.longitude}&appid={API key}\r\n    const ow_api= process.env.REACT_APP_OPEN_WEATHER;\r\nconst owUrl= `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${ow_api}&units=metric`;\r\nconsole.log(owUrl)\r\n            fetch(owUrl)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    this.setState({\r\n                  \r\n                 minEarth:response.main.temp_min,\r\n                 maxEarth: response.main.temp_max,\r\n                 earthPressure: response.main.pressure,\r\n                 condition: response.weather[0].main,\r\n                 icon: response.weather[0].icon,\r\n                 earthWind:response.wind.speed\r\n                     \r\n                      \r\n                    })\r\n                })\r\n              });\r\n        }\r\n      \r\n       \r\n\r\n        render() {\r\n        const {minEarth, maxEarth, condition, earthWind, pressure} = this.state;\r\n         console.log(minEarth, maxEarth, condition,earthWind, pressure)\r\n    \r\n    return (\r\n      \r\n        <MarsWeather {...this.state}></MarsWeather>\r\n  \r\n      \r\n    );\r\n  }; \r\n}\r\n\r\n  export default EarthWeather;\r\n","import React, {Component} from 'react';\r\n//import moment from 'moment';\r\nimport '../App.css';\r\nimport EarthWeather from '../Components/Earth/earthweather';\r\n//import MarsWeather from '../Components/Mars/marsweather';\r\n\r\n    const api_key= process.env.REACT_APP_GOVT_API_KEY;\r\n    \r\n   /* Hold over from old approach to current photos\r\n   const today= moment().format(\"YYYY-MM-DD\");\r\n    console.log(today)*/\r\n\r\n\r\nconst APIurl = `https://api.nasa.gov/mars-photos/api/v1/rovers/Perseverance/latest_photos?api_key=${api_key}`;\r\n\r\nclass Mars extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          marspic: [],\r\n       \r\n        \r\n         \r\n\r\n        };\r\n    }\r\n  \r\n\r\n    componentDidMount() {\r\n        fetch(APIurl)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({\r\n                  marspic:response.latest_photos[0].img_src\r\n                 \r\n                  \r\n                })\r\n            })\r\n    }\r\n  \r\n    render() {\r\n\r\n   const {marspic} = this.state;\r\n      console.log(marspic)\r\n        return (\r\n          <>\r\n          <div>\r\n          <h3>Mars</h3>\r\n          <a href={this.state.image}>\r\n          <img  alt='mars from perseverance' src={this.state.marspic}  height=\"300\" width=\"500\"/>\r\n          </a>\r\n          <p>Perseverance's latest photo from Mars</p>\r\n    \r\n            </div>\r\n            <br>\r\n            </br>\r\n            <br></br>\r\n            <EarthWeather></EarthWeather>\r\n\r\n</>\r\n       )\r\n   }\r\n        }\r\nexport default Mars;\r\n/*\r\nThe fetch itself works, and extracted JSON, fiddling with the format to better map the information and \r\nuse it below. Not to mention, this would better allow me to use \r\n\r\nconst baseUrl= 'https://api.nasa.gov/planetary/apod';\r\n  const api_key= process.env.REACT_APP_GOVT_API_KEY;\r\n\r\n\r\n  fetch(`${baseUrl}?api_key=${api_key}`)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n  console.log (response.hdurl, response.explanation);\r\n\r\n     I believe the above link was the right one, need to find how to return the \r\n      link-- ran into request issues, too many while testing state\r\n       console.log(response.originator.name)\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n    \r\n    return (\r\n      <>\r\n      <h1>Home</h1>\r\n      <p> NASA is the bees knees.\r\n        </p>\r\n        <div className=\"pic-day\">\r\n          <p>Picture Goes Here</p>\r\n      \r\n        </div>\r\n\r\n\r\n      </>\r\n    );\r\n    }\r\n  export default Home;\r\n*/\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './Components/Navbar.js'\nimport Footer from './Components/Footer'\nimport Home from './Pages/home'\nimport Music from './Components/MusicPanel'\nimport Earth from './Pages/Earth';\nimport Mars from './Pages/Mars';\n\nrequire('dotenv').config()\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <>\n          <Navbar />\n          <div className='page-container'>\n          <div className='LeftPanel'>\n          <Music/>\n          </div>\n          <div className='main'>\n          <Switch>\n         <Route exact path='/' component={Home}/>\n         <Route exact path='/earth' component={Earth}/>\n         <Route exact path='/mars' component={Mars}/>\n         \n          {/*  <Route exact path='/' component={SearchBooks} />\n            <Route exact path='/saved' component={SavedBooks} />\n  <Route component={SearchBooks} />*/}\n          </Switch>\n          </div>\n          </div>\n          <div className='footer-size'>\n          <Footer/>\n          </div>\n  \n        </>\n      </Router>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}